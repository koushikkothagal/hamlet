"use strict";angular.module("hamlet").directive("abTest",["HashService",function(t){return{restrict:"A",transclude:!0,scope:{abTestConfig:"@",abTestQualifier:"@"},link:function(e,a,n,r){n.$observe("abTestQualifier",function(){var e=t.calculateBucket(n.abTestQualifier,r.getRatios());r.selectBranch(e)})},controller:function(e){var a=e.panes=[],n=e.ratios=[];this.getRatios=function(){return n},this.selectBranch=function(t){angular.forEach(a,function(t){t.selected=!1}),a[t].selected=!0},this.addPane=function(t){a.push(t),1===a.length&&this.selectBranch(0)},this.readjustRatio=function(a){for(var n=0,r=0;r<=a.length;r++)if("others"===a[r]){a[r]=10-n;var i=t.calculateBucket(e.abTestQualifier,a);this.selectBranch(i)}else n+=1*a[r]},this.addRatio=function(t){var e;"others"===t?(n.push(t),this.readjustRatio(n)):(console.log("ratio: "+t),e=10*parseFloat(t),console.log("ratioToBePushed: "+e),n.push(e))}},template:"<div ng-transclude></div>"}}]).directive("testBranch",function(){return{require:"^abTest",restrict:"A",transclude:!0,scope:{title:"@",ratio:"@"},link:function(t,e,a,n){n.addPane(t),n.addRatio(t.ratio)},template:'<div ng-show="selected" ng-transclude></div>'}}),angular.module("hamlet").factory("HashService",function(){return{getHash:function(t){return new String(t).hashCode()},calculateMod:function(t,e){var a=this.getHash(t),n=a%10;return 0>n&&(n*=-1),n},allocateBucket:function(t,e){var a=e[0];if(a-1>=t)return 0;for(var n=1;n<e.length;n++){if(a-1>=t)return n-1;a+=e[n]}return e.length-1},calculateBucket:function(t,e){var a=this.calculateMod(t,e),n=this.allocateBucket(a,e);return n}}});